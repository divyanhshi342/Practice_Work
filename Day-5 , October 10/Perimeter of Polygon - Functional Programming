/*
You are given the cartesian coordinates of a set of points in a 2D plane. When traversed sequentially, these points form a Polygon, P , which is not self-intersecting 
in nature. Can you compute the perimeter of polygon P?

Input Format

The first line contains an integer, N , denoting the number of points.
The N subsequent lines each contain 2 space-separated integers denoting the respective x and y coordinates of a point.

Output Format

For each test case, print the perimeter of P (correct to a scale of one decimal place).

Note: Do not add any leading/trailing spaces or units.
*/

import scala.io.StdIn._

object Solution {

    def main(args: Array[String]) {
        var n = readLine.toInt
        var arr = Array.ofDim[Int](n,2)
        for(i<-0 until n){
           var temp = readLine.split(" ").map(_.toInt)
           arr(i)(0) = temp(0)
           arr(i)(1) = temp(1)
        }
   
        var sum = 0.0
        for(i<-0 until n-1){
           sum+=scala.math.sqrt( (scala.math.pow((arr(i+1)(0) - arr(i)(0)),2)+ scala.math.pow((arr(i+1)(1) - arr(i)(1)),2) ).toDouble)
        }
        sum+=scala.math.sqrt( (scala.math.pow((arr(0)(0) - arr(n-1)(0)),2)+ scala.math.pow((arr(0)(1) - arr(n-1)(1)),2) ).toDouble)
        
        println(sum)
    }
}

