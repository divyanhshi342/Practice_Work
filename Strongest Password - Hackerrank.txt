/*
The KLU WIFI signup page required to input a name and a password. However, the password must be strong enough. The website considers a password to be strong if it satisfies the following criteria:

Its length is at least 6 characters.
It contains at least 1 digit.
It contains at least 1 lowercase English character.
It contains at least 1 uppercase English character.
It contains at least 1 special character. The special characters are: !@#$%^&*()-+
Given the random string of length n in the password field but wasn't sure if it was strong. Can you find the minimum number of characters You must add to make her password strong?

Input Format

The first line contains an integer n denoting the length of the string.

The second line contains a string consisting of n characters. Each character is either a lowercase/uppercase English alphabet, a digit, or a special character.
*/


import scala.io.StdIn._ 

object Solution {

    def main(args: Array[String]) {
        var n = readLine().trim().toInt
        var s = readLine().trim()
        var actual_count = 0
        var count_low = 0
        var count_upper = 0
        var count_dig = 0
        var count_special = 0
        for(i<-0 until n){
            if(s.charAt(i).isDigit){
                count_dig +=1
            }else if(s.charAt(i) >= 'a' && s.charAt(i) <= 'z'){
                count_low +=1
            }else if(s.charAt(i) >= 'A' && s.charAt(i) <= 'Z'){
                count_upper +=1
            }else if(s.charAt(i).equals('!') || s.charAt(i).equals('@') || 
                     s.charAt(i).equals('#') || s.charAt(i).equals('$') ||
                     s.charAt(i).equals('%') || s.charAt(i).equals('^') || 
                     s.charAt(i).equals('&') || s.charAt(i).equals('*') || 
                     s.charAt(i).equals('(') || s.charAt(i).equals(')') ||
                     s.charAt(i).equals('-') || s.charAt(i).equals('+')){
                count_special += 1
            }
        }
        var count = 0 
        if(count_low<1){
            count+=1
        }
        if(count_upper<1){
            count+=1
        }
        if(count_dig<1){
            count+=1
        }
        if(count_special<1){
            count+=1
        }
        
        actual_count = count_low + count_upper + count_dig + count_special
        actual_count = actual_count+count

        if(actual_count<6){
            println(6-actual_count+count)
            
        }else{
            println(count)
        }
    }
}