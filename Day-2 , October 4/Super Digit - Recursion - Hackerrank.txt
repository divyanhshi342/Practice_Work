/*
We define super digit of an integer x using the following rules:
If x has only 1 digit, then its super digit is x.
Otherwise, the super digit of x is equal to the super digit of the digit-sum of x .
Here, digit-sum of a number is defined as the sum of its digits.
You are given two numbers n and k . You have to calculate the super digit of P .
P is created when number n is concatenated k times.

Input Format
The first line contains two space separated integers, n and k.

Output Format
Output the super digit of P , where P is created as described above.
*/

object Solution {
    def super_digit(n:String):String={
      if(n.length==1){
      return n
      }else{
         return super_digit(n.split("").map(st=>st.toInt).sum.toString)
      }
    }
    
    def main(args: Array[String]) {
       var st = scala.io.StdIn.readLine().trim().split(" ")
       var n = st(0)
       var k = st(1)
       var ans = super_digit(n)
           println(super_digit((ans.toInt * k.toInt).toString))        
    }
}
